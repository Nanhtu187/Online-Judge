syntax = "proto3";
package iam.v1;

import "iam/v1/common.proto";
import "google/api/annotations.proto";
option go_package = "github.com/Nanhtu187/Online-Judge/proto/rpc/iam/v1";

service IamService {
  // CreateUser ...
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/users"
      body: "*"
    };
  }

  // GetUser ...
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }

  // Login ...
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }

  // Refresh token ...
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      get: "/api/v1/users"
    };
  }

  // Refresh token ...
  rpc GetListUser(GetListUserRequest) returns (GetListUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/x"
      body: "*"
    };
  }
}

message CreateUserRequest {
  string username = 1 [json_name = "username"];
  string password = 2 [json_name = "password"];
  string name = 3 [json_name = "name"];
  string school = 4 [json_name = "school"];
  string class = 5 [json_name = "class"];

}
message CreateUserResponse {
  int32 code = 1 [json_name = "code"];
  string message = 2 [json_name = "message"];
  CreateUserData data = 3 [json_name = "data"];
}

message CreateUserData {
  string access_token = 1 [json_name = "access_token"];
  string refresh_token = 2 [json_name = "refresh_token"];
}

message GetUserRequest {
  int32 user_id = 1 [json_name = "user_id"];
  string username = 2 [json_name = "username"];
}

message GetUserResponse {
  int32 code = 1 [json_name = "code"];
  string message = 2 [json_name = "message"];
  GetUserData data = 3 [json_name = "data"];
}

message GetUserData {
  int32 user_id = 1 [json_name = "user_id"];
  string name = 2 [json_name = "name"];
}

message LoginRequest {
  string username = 1 [json_name = "username"];
  string password = 2 [json_name = "password"];
}

message LoginResponse {
  int32 code = 1 [json_name = "code"];
  string message = 2 [json_name = "message"];
  LoginData data = 3 [json_name = "data"];
}

message LoginData {
  string access_token = 1 [json_name = "access_token"];
  string refresh_token = 2 [json_name = "refresh_token"];
}

message RefreshTokenRequest {
  string access_token = 1 [json_name = "access_token"];
  string refresh_token = 2 [json_name = "refresh_token"];
}

message RefreshTokenResponse {
  int32 code = 1 [json_name = "code"];
  string message = 2 [json_name = "message"];
  RefreshTokenData data = 3 [json_name = "data"];
}

message RefreshTokenData {
  string access_token = 1 [json_name = "access_token"];
  string refresh_token = 2 [json_name = "refresh_token"];
}

message GetListUserRequest {
  string keyword = 1 [json_name = "keyword"];
  string school = 2 [json_name = "school"];
  string class = 3 [json_name = "class"];
  int32 page = 4 [json_name = "page"];
  int32 page_size = 5 [json_name = "page_size"];
}

message GetListUserResponse {
  int32 code = 1 [json_name = "code"];
  string message = 2 [json_name = "message"];
  GetListUserData data = 3 [json_name = "data"];
}

message GetListUserData {
  repeated UserData users = 1 [json_name = "users"];
  Pagination pagination = 2 [json_name = "pagination"];
}

message UserData {
  int32 user_id = 1 [json_name = "user_id"];
  string name = 2 [json_name = "name"];
  string school = 3 [json_name = "school"];
  string class = 4 [json_name = "class"];
}